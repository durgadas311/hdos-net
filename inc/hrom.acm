;  USEFUL SUBROUTINES IN H17 ROM.
; $DADA has to be renamed to avoid confusion in zmac for hex constant

$COMP	EQU	1830H	; COMPARE (DE) TO (HL) FOR (C) BYTES
@DADA	EQU	183AH	; (HL) = (HL)+(A) REG A IS DESTROYED
$DADA.	EQU	1841H	; (HL) = (HL)+(A) REG A IS NOT DESTROYED
$DU66	EQU	1846H	; (HL) = (BC) / (DE)
$HLIHL	EQU	1889H	; INDIRECT LOAD HL THROUGH HL
$CDEHL	EQU	188EH	; COMPARE (DE) TO (HL) FOR EQUALITY
$CHL	EQU	1894H	; TWO'S COMPLEMENT FOR (HL)
$INDL	EQU	189CH	; LOAD REG DE WITH 2 BYTES AT (HL)+DISPLACEMENT
$MOVE	EQU	18AAH	; FROM (DE) TO (HL) FOR (BC)
$MU10	EQU	18D4H	; MULTIPLY (DE) BY 10 GIVING (HL)
$MU66	EQU	18DFH	; HL = BC * DE
$MU86	EQU	1907H	; HL = DE * A
$RSTALL	EQU	1927H	; RESTORE ALL REGISTERS
$SAVALL	EQU	192CH	; SAVE ALL REGISTERS ON STACK
$TJMP	EQU	1931H	; TABLE JUMP WITH (A) = INDEX
$TJMP.	EQU	1932H	; TABLE JUMP WITH (A) = INDEX*2
$TBRA	EQU	193EH	; BRANCH RELATIVE THROUGH TABLE
;$TBLS	EQU	1949H	; SEQUENTIAL TABLE SEARCH
$TYPTX	EQU	195EH	; TYPE TEXT WITH ADDR OF TEXT ON STACK
$TYPTX.	EQU	1964H	; TYPE TEXT WITH ADDR IN REG HL
$UDD	EQU	196FH	; BC = ADDR, A = COUNT, HL = PLACEMENT
$ZERO	EQU	198AH	; HL = ADDR, B = COUNT
$FILL	EQU	$ZERO+1	; HL=ADDR, B = COUNT, A = VAL
$WER	EQU	19A1H	; WRITE ENABLE RAM
$ZEROS	EQU	19D0H	; FIELD OF 6 ZEROS

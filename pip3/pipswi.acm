	STL	'SWITCH PROCESSING TABLES AND ROUTINES'
	EJECT
***	SWITCH PROCESSING TABLES AND ROUTINES.
*
*	COMMAND SWITCHES ARE PROCESSED VIA THE ROUTINE $DRS, 'DECODE AND
*	REMOVE SWITCHES'. $DRS IS SUPPLIED WITH A SWITCH DESCRIPTION
*	TABLE, WHICH CONTAINS THE ADDRESSES OF ROUTINES
*	WHICH ARE ENVOKED WHEN THE SWITCHES ARE ENCOUNTERED.

**	SWITCH TABLE

.	SET	200Q
PIPA	DS	0		FWA SWITCH TABLE

*	VERB SWITCHES

	DB	'L','I'+.,'S'+.,'T'+.,.
	DW	SW.LIS		/LIST

	DB	'F','U'+.,'L'+.,'L'+.,.
	DW	SW.FUL		/FULL

	DB	'B','R'+.,'I'+.,'E'+.,'F'+.,.
	DW	SW.BRE		/BRIEF

	DB	'M','I'+.,'N'+.,'I'+.,'M'+.,'U'+.,'M'+.,.
	DW	SW.MIN		/MINIMUM

	DB	'G','R'+.,'O'+.,'U'+.,'P'+.,'S'+.,.
	DW	SW.GRP		/GROUPS

	DB	'SET','F'+.,'L'+.,'A'+.,'G'+.,.
	DW	SW.SET		/SETFLAG:f..

	DB	'CLR','F'+.,'L'+.,'A'+.,'G'+.,.
	DW	SW.CLR		/CLRFLAG:f..

	IF	USER
	DB	'PUT','U'+.,'S'+.,'E'+.,'R'+.,.
	DW	SW.PUT		/PUTUSER:u..

	DB	'REM','U'+.,'S'+.,'E'+.,'R'+.,.
	DW	SW.REM		/REMUSER:u..
	ENDIF

	DB	'DEL','E'+.,'T'+.,'E'+.,.
	DW	SW.DEL		/DELETE

	DB	'R','E'+.,'N'+.,'A'+.,'M'+.,'E'+.,.
	DW	SW.REN		/RENAME

	DB	'CRC',.
	DW	SW.CRC		/CRC

	DB	'MOU','N'+.,'T'+.,.
	DW	SW.MOU		/MOUNT

	DB	'DIS','M'+.,'O'+.,'U'+.,'N'+.,'T'+.,.
	DW	SW.DIS		/DISMOUNT

	DB	'RES','E'+.,'T'+.,.
	DW	SW.RES		/RESET

	DB	'VERS','I'+.,'O'+.,'N'+.,.
	DW	SW.VER		/VERSION

	DB	'ID',.
	DW	SW.VRX		/ID

	DB	'?','?'+.,'?'+.,.
	DW	SW.HLP		/???

	DB	'FUBAR',.
	DW	SW.FUB		/FUBAR

	DB	'SNAFU',.
	DW	SW.SNA		/SNAFU

*	MODIFIER SWITCHES

	DB	'S','Y'+.,'S'+.,'T'+.,'E'+.,'M'+.,.
	DW	SW.SYS		/SYSTEM

	DB	'FL','A'+.,'G'+.,.
	DW	SW.FLA		/FLAG:f..

	DB	'NOF','L'+.,'A'+.,'G'+.,.
	DW	SW.NOF		/NOFLAG:f..

	IF	USER
	DB	'US','E'+.,'R'+.,.
	DW	SW.USE		/USER:u..

	DB	'NOU','S'+.,'E'+.,'R'+.,.
	DW	SW.NOU		/NOUSER:f..
	ENDIF

	DB	'BEF','O'+.,'R'+.,'E'+.,.
	DW	SW.BEF		/BEFORE:dd-mmm-yy

	DB	'CUR','R'+.,'E'+.,'N'+.,'T'+.,.
	DW	SW.CUR		/CURRENT:dd-mmm-yy

	DB	'AFT','E'+.,'R'+.,.
	DW	SW.AFT		/AFTER:dd-mmm-yy

	DB	'AGE',.
	DW	SW.AGE		/AGE:nn

	DB	'AC','C'+.,'E'+.,'S'+.,'S'+.,.
	DW	SW.ACC		/ACCESS

	DB	'COU','N'+.,'T'+.,.
	DW	SW.COU		/COUNT:nn

	DB	'NOC','O'+.,'U'+.,'N'+.,'T'+.,.
	DW	SW.NOC		/NOCOUNT:nn

	DB	'Q','U'+.,'E'+.,'R'+.,'Y'+.,.
	DW	SW.QUE		/QUERY

	DB	'-',.
	DW	SW.NEG		/-

	DB	'SO','R'+.,'T'+.,.
	DW	SW.SRT		/SORT:nedac

	DB	'REV','E'+.,'R'+.,'S'+.,'E'+.,.
	DW	SW.REV		/REVERSE

	DB	'SU','P'+.,'R'+.,'E'+.,'S'+.,'S'+.,.
	DW	SW.SUP		/SUPRESS

	DB	'ALL','O'+.,'C'+.,'A'+.,'T'+.,'E'+.,.
	DW	SW.ALL		/ALLOCATE

	DB	'P','A'+.,'G'+.,'E'+.,.
	DW	SW.PAG		/PAGE:nn

	DB	'COL',.
	DW	SW.COL		/COL:nn

	DB	'D','A'+.,'T'+.,'E'+.,.
	DW	SW.DAT		/DATE

	DB	'ATT','R'+.,'I'+.,'B'+.,.
	DW	SW.ATT		/ATTRIB:f..

	DB	'K','E'+.,'E'+.,'P'+.,.
	DW	SW.KEE		/KEEP

	DB	'C','O'+.,'N'+.,'T'+.,'I'+.,'G'+.,.
	DW	SW.CNT		/CONTIG

	DB	'FOR','C'+.,'E'+.,.
	DW	SW.FOR		/FORCE

	DB	'SA','F'+.,'E'+.,.
	DW	SW.SAF		/SAFE

	DB	'V','E'+.,'R'+.,'I'+.,'F'+.,'Y'+.,.
	DW	SW.VFY		/VERIFY

	DB	'XXX',.
	DW	SW.XXX		/XXX

	DB	'YYY',.
	DW	SW.YYY		/YYY

	DB	'ZZZ',.
	DW	SW.ZZZ		/ZZZ

	DB	0		END OF TABLE
	EJECT
***	VERB SWITCHES

**	SW.LIS - /LIST SWITCH DETECTED.

SW.LIS	LDA	COMAND
	ANA	A
	JZ	SW.LIS1		NO FUNCTION
	ERRNZ	I.LIS-1
	ERRNZ	I.FUL-2
	ERRNZ	I.BRE-3
	ERRNZ	I.MIN-4
	ERRNZ	I.GRP-5
	SUI	6
	CMC
	RNC			ALREADY HAVE ONE SPECIFIED AND IT OVERRULES
SW.LIS1 MVI	A,I.LIS 	/LIST
SW.LIS2 STA	COMAND
	LDA	QUERY		/L or /F or /B or /M or /G and /Q NOT ALLOWED
	ANA	A
	JNZ	SW.CS		CONTRADICTORY SWITCHES
	RET
	SPACE	3,10
**	SW.FUL - /FULL SWITCH DETECTED

SW.FUL	LDA	COMAND		ALLOW TO SUPERCEDE /LIST
	ANA	A
	JZ	SW.FUL1 	NO OTHER COMMAND
	ERRNZ	I.LIS-1
	DCR	A
	JNZ	SW.CS		CONTRADICTORY SWITCHES
SW.FUL1 LDA	SUPRES		/SU/F IS NOT ALLOWED
	LXI	H,ALLOCA	/ALL/F IS NOT ALLOWED
	ORA	M
	JNZ	SW.CS		CONTRADICTORY SWITCHES
	MVI	A,I.FUL 	IS /FULL
	JMP	SW.LIS2
	SPACE	3,10
**	SW.BRE - /BRIEF SWITCH DETECTED.

SW.BRE	LDA	COMAND		ALLOW TO SUPERCEDE /LIST
	ANA	A
	JZ	SW.BRE1		NO OTHER COMMAND
	ERRNZ	I.LIS-1
	DCR	A
	JNZ	SW.CS		CONTRADICTORY SWITCHES
SW.BRE1 MVI	A,I.BRE 	IS /BRIEF
	JMP	SW.LIS2
	SPACE	3,10
**	SW.MIN - /MINIMUM SWITCH DETECTED

SW.MIN	LDA	COMAND		ALLOW TO SUPERCEDE /LIST
	ANA	A
	JZ	SW.MIN1 	NO OTHER COMMAND
	ERRNZ	I.LIS-1
	DCR	A
	JNZ	SW.CS		CONTRADICTORY SWITCHES
SW.MIN1 MVI	A,I.MIN 	IS /MINIMUM
	JMP	SW.LIS2
	SPACE	3,10
**	SW.GRP - /GROUP SWITCH DETECTED

SW.GRP	LDA	COMAND		ALLOW TO SUPERCEDE /LIST
	ANA	A
	JZ	SW.GRP1 	NO OTHER COMMAND
	ERRNZ	I.LIS-1
	DCR	A
	JNZ	SW.CS		CONTRADICTORY SWITCHES
SW.GRP1 MVI	A,I.GRP 	IS /GROUPS
	JMP	SW.LIS2
	SPACE	3,10
**	SW.SET - /SETFLAG SWITCH DETECTED

SW.SET	MVI	A,I.SET
	CALL	SWIT1
	PUSH	H
	LXI	H,DFSSC
	MVI	M,'!'		BORROW 'C' FLAG POSITION, USER CAN'T SET IT
	POP	H
SW.SET1 CALL	DFSS
	JC	SW.ERR
SW.SET2 LXI	H,D.SET
	ORA	M
	MOV	M,A		SAVE FLAG DATA
	RET
	SPACE	3,10
**	SW.CLR - /CLRFLAG SWITCH DETECTED

SW.CLR	MVI	A,I.CLR
	CALL	SWIT1
	PUSH	H
	LXI	H,DFSSC
	MVI	M,'@'		CLEAR ACCESSES, USER CAN'T CLEAR 'C' FLAG
	POP	H
	MOV	A,M
	CPI	':'		SUBSWITCH?
	MVI	A,11101111B	ASSUME ALL BUT 'C'
	JNE	SW.SET2 	NO :
	JMP	SW.SET1
	SPACE	3,10
	IF	USER
**	SW.PUT - /PUTUSER SWITCH DETECTED

SW.PUT	MVI	A,I.PUT
	CALL	SWIT1
	PUSH	H
	LXI	H,DFSSU
	MVI	M,'!'		BORROW '0' USER POSITION
	POP	H
SW.PUT1 CALL	DFSS.
	JC	SW.ERR
SW.PUT2 LXI	H,D.SET
	ORA	M
	MOV	M,A		SAVE FLAG DATA
	RET
	ENDIF
	SPACE	3,10
	IF	USER
**	SW.REM - /REMUSER SWITCH DETECTED

SW.REM	MVI	A,I.REM
	CALL	SWIT1
	PUSH	H
	LXI	H,DFSSU
	MVI	M,3		USER CAN'T REMOVE FROM USER 0
	POP	H
	MOV	A,M
	CPI	':'		SUBSWITCH?
	MVI	A,01111111B	ASSUME ALL BUT 0
	JNE	SW.PUT2 	NO :
	JMP	SW.PUT1
	ENDIF
	SPACE	3,10
**	SW.DEL - /DELETE SWITCH DETECTED.

SW.DEL	MVI	A,I.DEL
	JMP	SWIT1
	SPACE	3,10
**	SW.REN - /RENAME SWITCH DETECTED.

SW.REN	MVI	A,I.REN
	JMP	SWIT1
	SPACE	3,10
**	SW.CRC - /CRC SWITCH DETECTED

SW.CRC	MVI	A,I.CRC
	JMP	SWIT1
	SPACE	3,10
**	SW.MOU	- /MOUNT SWITCH DETECTED

SW.MOU	MVI	A,I.MOU
	JMP	SWIT1
	SPACE	3,10
**	SW.DIS - /DISMOUNT SWITCH DETECTED

SW.DIS	MVI	A,I.DIS
	JMP	SWIT1
	SPACE	3,10
**	SW.RES - /RESET SWITCH DETECTED.

SW.RES	MVI	A,I.RES
	JMP	SWIT1
	SPACE	3,10
**	SW.VER - /VERSION SWITCH DETECTED

SW.VER	MVI	A,I.VER
	JMP	SWIT1
	SPACE	3,10
**	SW.VRX - /ID SWITCH DETECTED

SW.VRX	MVI	A,I.VERX
	JMP	SWIT1
	SPACE	3,10
**	SW.HLP - /??? SWITCH DETECTED

SW.HLP	MVI	A,I.HLP
	JMP	SWIT1
	SPACE	3,10
**	SW.FUB - /FUBAR USER SWITCH DETECTED

SW.FUB	MVI	A,I.FUB
	JMP	SWIT1
	SPACE	3,10
**	SW.SNA - /SNAFU USER SWITCH DETECTED

SW.SNA	MVI	A,I.SNA
*	JMP	SWIT1
	ERRNZ	*-SWIT1 	SWIT1 MUST BE NEXT
	SPACE	3,10
*	SWIT1 - PROCESS MAJOR FUNCTION SWITCH.
*
*	SWIT1 IS ENTERED TO PROCESS SWITCHES WHICH DETERMINE THE FUNCTION
*	PIP IS TO PERFORM. I.E. 'VERB' SWITCHES, SUCH
*	AS /DELETE (AS OPOSED TO 'MODIFIER' SWITCHES, LIKE /SYSTEM)

SWIT1	LXI	B,COMAND
	PUSH	PSW		SAVE COMMAND
	LDAX	B		(A) = PREVIOUS COMMAND
	ANA	A
	JNZ	SW.CS		CONTRADICTORY SWITCHES
	POP	PSW		(A) = NEW CODE
	STAX	B		STORE IT
	RET
	EJECT
***	MODIFIER SWITCHES

**	SW.SYS - /SYSTEM SWITCH DETECTED.

SW.SYS	MVI	A,1
	STA	SYSTEM
	LDA	NOFLAG
	ANI	DIF.SYS
	JNZ	SW.CS		/NOF:S/S IS CONTRADICTORY
	RET
	SPACE	3,10
**	SW.FLA - /FLAG: SWITCH DETECTED

SW.FLA	PUSH	H
	LXI	H,DFSSC
	MVI	M,'C'		INSURE 'C' FLAG
	POP	H
	CALL	DFSS		DECODE FLAG SUB-SWITCHES
	JC	SW.ERR
	LXI	H,FLAG
	ORA	M
	MOV	M,A		SET SUBSWITCHES
	ANI	DIF.SYS
	JZ	SW.FLA. 	DIDN'T REQUEST 'S'
	MVI	A,1
	STA	SYSTEM		FORCE /S
SW.FLA. MOV	A,M
	LXI	H,NOFLAG
	ANA	M
	RZ			DIDN'T MIX FLAGS
SW.CS	MVI	A,PEC.CS
	JMP	ERROR
	SPACE	3,10
**	SW.NOF - /NOFLAG: SWITCH DETECTED

SW.NOF	MOV	A,M
	CPI	':'		SUBSWITCH?
	MVI	A,-1		ASSUME ALL FLAGS
	JNE	SW.NOF1 	NO :
	PUSH	H
	LXI	H,DFSSC
	MVI	M,'C'		INSURE 'C' FLAG
	POP	H
	CALL	DFSS		DECODE FLAG SUB-SWITCHES
	JC	SW.ERR
SW.NOF1 LXI	H,NOFLAG
	ORA	M
	MOV	M,A		SET SUBSWITCHES
	ANI	DIF.SYS
	JZ	SW.NOF. 	DIDN'T FORBID 'S'
	LDA	SYSTEM
	ANA	A
	JNZ	SW.CS		/S/NOF:S IS CONTRADICTORY
SW.NOF. MOV	A,M
	LXI	H,FLAG
	ANA	M
	RZ			DIDN'T MIX FLAGS
	JMP	SW.CS
	SPACE	3,10
	IF	USER
**	SW.USE - /USER: SWITCH DETECTED

SW.USE	PUSH	H
	LXI	H,DFSSU
	MVI	M,'0'		INSURE '0' USER
	POP	H
	CALL	DFSS.		DECODE USER SUB-SWITCHES
	JC	SW.ERR
	LXI	H,USER
	ORA	M
	MOV	M,A		SET SUBSWITCHES
	LXI	H,NOUSER
	ANA	M
	RZ			DIDN'T MIX USERS
	JMP	SW.CS
	ENDIF
	SPACE	3,10
	IF	USER
**	SW.NOU - /NOUSER: SWITCH DETECTED

SW.NOU	MOV	A,M
	CPI	':'		SUBSWITCH?
	MVI	A,01111111B	ASSUME ALL USERS BUT ZERO
	JNE	SW.NOU1 	NO :
	PUSH	H
	LXI	H,DFSSU
	MVI	M,'0'		INSURE '0' USER
	POP	H
	CALL	DFSS.		DECODE USER SUB-SWITCHES
	JC	SW.ERR
SW.NOU1 LXI	H,NOUSER
	ORA	M
	MOV	M,A		SET SUBSWITCHES
	LXI	H,USER
	ANA	M
	RZ			DIDN'T MIX USERS
	JMP	SW.CS
	ENDIF
	SPACE	3,10
**	SW.BEF - /BEFORE SWITCH DETECTED

SW.BEF	MVI	A,1
	STA	BEFORE
	XCHG
	XRA	A
	LXI	H,CURREN
	ORA	M
	JNZ	SW.CS		CONTRADICTORY SWITCHES
	LXI	H,DATEB
	SHLD	SW.C0
	SHLD	SW.C1
	JMP	SW.C
	SPACE	3,10
**	SW.CUR - /CURRENT SWITCH DETECTED

SW.CUR	MVI	A,1
	STA	CURREN
	XCHG
	XRA	A
	LXI	H,BEFORE
	ORA	M
	LXI	H,AFTER
	ORA	M
	JNZ	SW.CS		CONTRADICTORY SWITCHES
	LXI	H,DATEC
	SHLD	SW.C0
	SHLD	SW.C1
*	JMP	SW.C

SW.C	LHLD	S.DATC		SAVE TODAYS DATE
	SHLD	DATEC		IN CASE THATS ALL WE WANT
SW.C0	EQU	*-2
	XCHG
	MOV	A,M
	CPI	':'		SUBSWITCH?
	RNE			NO
SW.C.	INX	H		YES, BUMP TO ASCII DATE
	CALL	$CAD		DE = CODED DATE
	JC	SW.ERR
	XCHG
	SHLD	DATEC		SAVE CODED DATE
SW.C1	EQU	*-2
	XCHG
SW.CUR. DCX	H		BLANK OUT ASCII DATE & :
	MOV	A,M
	MVI	M,' '
	CPI	':'
	JNZ	SW.CUR.
	RET
	SPACE	3,10
**	SW.AFT - /AFTER SWITCH DETECTED

SW.AFT	MVI	A,1
	STA	AFTER
	XCHG
	XRA	A
	LXI	H,CURREN
	ORA	M
	JNZ	SW.CS		CONTRADICTORY SWITCHES
	LXI	H,DATEA
	SHLD	SW.C1
	XCHG
	MOV	A,M
	CPI	':'
	JE	SW.C.
SW.ERRX MVI	A,PEC.MSS
	JMP	ERROR
	SPACE	3,10
**	SW.AGE - /AGE

SW.AGE	XCHG			SAVE HL
	XRA	A
	LXI	H,CURREN
	ORA	M
	LXI	H,BEFORE
	ORA	M
	JNZ	SW.CS
	XCHG
	CALL	$DNS.
	JC	SW.ERR
	MOV	A,D
	ORA	E
	JZ	SW.ERR
	DCX	D
	XCHG
	SHLD	AGE
	XCHG
	LHLD	S.DATC
	MOV	A,D
	ORA	E
	JZ	PACK1

	MOV	A,L		UNPACK DATE
	ANI	37Q
	STA	V.DAY
	MOV	A,H
	RAR
	STA	V.YR70
	MOV	A,L
	RAR
	ANI	360Q
	RRC
	RRC
	RRC
	RRC
	STA	V.MON

	LHLD	AGE		DECREMENT DATE
A.DAY	PUSH	H
	LDA	V.DAY
	DCR	A
	JZ	A.MON
	STA	V.DAY
	JMP	A.LOOP

A.MON	LDA	V.MON
	DCR	A
	JZ	A.YR
	STA	V.MON
	LXI	H,DPMTAB-1
	CALL	$DADA
	MOV	A,M
	STA	V.DAY
	CPI	28
	JNE	A.LOOP
	LDA	V.YR70
	ADI	70
	ANI	11B
	JNZ	A.LOOP
	MVI	A,29
	STA	V.DAY
	JMP	A.LOOP

A.YR	LDA	V.YR70
	DCR	A
	JM	LIMIT
	STA	V.YR70
	MVI	A,12
	STA	V.MON
	MVI	A,31
	STA	V.DAY

A.LOOP	POP	H
	DCX	H
	MOV	A,H
	ORA	L
	JNZ	A.DAY

PACK	LDA	V.MON		PACK DATE
	ANA	A
	RAR
	RAR
	RAR
	RAR
	PUSH	PSW
	MOV	L,A
	LDA	V.DAY
	ORA	L
	MOV	L,A
	POP	PSW
	LDA	V.YR70
	RAL
	MOV	H,A

PACK1	SHLD	DATEB
	MVI	A,1
	STA	BEFORE

	XCHG
	LXI	H,DATE..
	CALL	$DAD
	CALL	$TYPTX
	DB	'Aging before '
DATE..	DB	'dd-mmm-yy',ENL
	RET

LIMIT	POP	H
	LXI	H,41A		1-JAN-70
	JMP	PACK1

V.DAY	DB	0
V.MON	DB	0
V.YR70	DB	0

DPMTAB	DB	31,28,31,30,31,30,31,31,30,31,30
	SPACE	3,10
**	SW.ACC - /ACCESS

SW.ACC	MVI	A,1
	STA	ACCESS
	RET
	SPACE	3,10
**	SW.COU - /COUNT SWITCH

SW.COU	MOV	A,M
	CPI	':'
	JNE	SW.COU1
	CALL	$DNS.
	JC	SW.ERR
	MOV	A,E
	DB	1		FAKE LXI B,
SW.COU1 MVI	A,1
	STA	COUNT
	RET
	SPACE	3,10
**	SW.NOC - /NOCOUNT SWITCH

SW.NOC	MOV	A,M
	CPI	':'
	JNE	SW.NOC1
	CALL	$DNS.
	JC	SW.ERR
	MOV	A,E
	DB	1		FAKE LXI B,
SW.NOC1 MVI	A,1
	STA	NOCOUNT
	RET
	SPACE	3,10
**	SW.QUE - /QUERY SWITCH DETECTED

SW.QUE	LDA	COMAND		/Q and /L or /F or /B or /M or /G NOT ALLOWED
	ANA	A
	JZ	SW.QUE1
	CPI	6
	JC	SW.CS		CONTRADICTORY SWITCHES
SW.QUE1 MVI	A,1
	STA	QUERY
	RET
	SPACE	3,10
**	SW.NEG - /- SWITCH DETECTED

SW.NEG	MVI	A,100Q		DON'T CHANGE THIS, 'Z' FLAG BIT
	STA	NEGATE
	RET
	SPACE	3,10
**	SW.SRT - /SORT SWITCH DETECTED

SW.SRT	MVI	A,1
	STA	SORT
	CALL	DSSS
	JC	SW.ERR
	RET
	SPACE	3,10
**	SW.REV - /REVERSE

SW.REV	MVI	A,3		DON'T CHANGE THIS, OFFSET IN $SORT
	STA	REVERSE
	RET
	SPACE	3,10
**	SW.SUP - /SUPPRESS SWITCH DETECTED

SW.SUP	LDA	COMAND		/F/SU IS NOT ALLOWED
	CPI	I.FUL
	JE	SW.CS		CONTRADICTORY SWITCHES
	LDA	PAGE		/P/SU IS NOT ALLOWED
	ANA	A
	JNZ	SW.CS		CONTRADICTORY SWITCHES
	LXI	H,SUPRES
	INR	M		Count of how many /SU's you have
	RET
	SPACE	3,10
**	SW.ALL	- /ALLOCATE Switch Detected

SW.ALL	LDA	COMAND		/F/ALL IS NOT ALLOWED
	CPI	I.FUL
	JE	SW.CS		CONTRADICTORY SWITCHES
	MVI	A,1
	STA	ALLOCA
	RET
	SPACE	3,10
**	SW.PAG - /PAGE SWITCH DETECTED

SW.PAG	LDA	SUPRES		/SU/P IS NOT ALLOWED
	ANA	A
	JNZ	SW.CS		CONTRADICTORY SWITCHES
	MOV	A,M
	CPI	':'		SUBSWITCH?
	JNE	SW.PAG1 	NO, DEFAULT
	CALL	$DNS.		DECODE NUMERIC SWITCH
	JC	SW.ERR
	MOV	A,E
	DB	1		FAKE LXI B,
SW.PAG1 MVI	A,55		DEFAULT
	STA	PAGE
	RET
	SPACE	3,10
**	SW.COL - /COL SWITCH DETECTED

SW.COL	CALL	$DNS.		DECODE NUMERIC SWITCH
	JC	SW.ERR
	MOV	A,E
	STA	COLUMN
	RET
	SPACE	3,10
**	SW.DAT - /DATE SWITCH DETECTED

SW.DAT	MVI	A,1
	STA	DATE
	RET
	SPACE	3,10
**	SW.ATT - /ATTRIB SWITCH DETECTED

SW.ATT	MVI	A,1
	STA	ATTRIB
	LDA	KEEP
	ANA	A
	JNZ	SW.CS		CONTRADICTORY SWITCHES
	MOV	A,M
	CPI	':'		SUBSWITCH?
	RNE			NO

	MVI	A,2		YES
	STA	ATTRIB
	PUSH	H
	LXI	H,DFSSC
	MVI	M,'C'		INSURE 'C' FLAG
	POP	H
	CALL	DFSS		DECODE FLAG SUBSWITCHES
	JC	SW.ERR
	LXI	H,D.SET
	ORA	M
	MOV	M,A		SET SUBSWITCHES
	ANI	DIF.CNT
	JNZ	SW.ERR		CAN'T SET 'C'
	RET
	SPACE	3,10
**	SW.KEE - /KEEP SWITCH DETECTED

SW.KEE	MVI	A,1
	STA	KEEP
	LDA	ATTRIB
	ANA	A
	JNZ	SW.CS		CONTRADICTORY SWITCHES
	RET
	SPACE	3,10
**	SW.CNT - /CONTIG SWITCH DETECTED

SW.CNT	MVI	A,1
	STA	CONTIG
	LDA	FORCE
	ANA	A
	JNZ	SW.CS		CONTRADICTORY SWITCHES
	RET
	SPACE	3,10
**	SW.FOR - /FORCE SWITCH DETECTED

SW.FOR	MVI	A,1
	STA	FORCE
	LDA	CONTIG
	ANA	A
	JNZ	SW.CS		CONTRADICTORY SWITCHES
	RET
	SPACE	3,10
**	SW.SAF - /SAFE SWITCH DETECTED

SW.SAF	MVI	A,1
	STA	SAFE
	RET
	SPACE	3,10
**	SW.VFY - /VERIFY SWITCH DETECTED

SW.VFY	MVI	A,1
	STA	VERIFY
	RET
	SPACE	3,10
**	SW.XXX - /XXX USER SWITCH DETECTED

SW.XXX	MVI	A,1
	STA	XUSR
	RET
	SPACE	3,10
**	SW.YYY - /YYY USER SWITCH DETECTED

SW.YYY	MVI	A,1
	STA	YUSR
	RET
	SPACE	3,10
**	SW.ZZZ - /ZZZ USER SWITCH DETECTED

SW.ZZZ	MVI	A,1
	STA	ZUSR
	RET
	SPACE	3,10
SW.ERR	MVI	A,PEC.ISS	ILLEGAL SUB-SWITCH
	JMP	ERROR
